// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const dialog = flutter_sdk.src__material__dialog;
  const text_button = flutter_sdk.src__material__text_button;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $modulo = dartx['%'];
  var $addAll = dartx.addAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToNimGameScreen: () => (T.BuildContextToNimGameScreen = dart.constFn(dart.fnType(main.NimGameScreen, [framework.BuildContext])))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToAlertDialog: () => (T.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToElevatedButton: () => (T.intToElevatedButton = dart.constFn(dart.fnType(elevated_button.ElevatedButton, [core.int])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.NimGameApp = class NimGameApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Jogo Nim", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: new main.HomeScreen.new()});
    }
    static ['_#new#tearOff']() {
      return new main.NimGameApp.new();
    }
  };
  (main.NimGameApp.new = function() {
    main.NimGameApp.__proto__.new.call(this);
    ;
  }).prototype = main.NimGameApp.prototype;
  dart.addTypeTests(main.NimGameApp);
  dart.addTypeCaches(main.NimGameApp);
  dart.setMethodSignature(main.NimGameApp, () => ({
    __proto__: dart.getMethods(main.NimGameApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.NimGameApp, I[0]);
  main.HomeScreen = class HomeScreen extends framework.StatelessWidget {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Jogo Nim")}), body: new basic.Center.new({child: new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.blue, onPrimary: colors.Colors.white, padding: new edge_insets.EdgeInsets.symmetric({horizontal: 40, vertical: 20}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), onPressed: dart.fn(() => {
              navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.NimGameScreen.new(), T.BuildContextToNimGameScreen())}));
            }, T.VoidTovoid()), child: new text.Text.new("Começar Jogo")})})});
    }
    static ['_#new#tearOff']() {
      return new main.HomeScreen.new();
    }
  };
  (main.HomeScreen.new = function() {
    main.HomeScreen.__proto__.new.call(this);
    ;
  }).prototype = main.HomeScreen.prototype;
  dart.addTypeTests(main.HomeScreen);
  dart.addTypeCaches(main.HomeScreen);
  dart.setMethodSignature(main.HomeScreen, () => ({
    __proto__: dart.getMethods(main.HomeScreen.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.HomeScreen, I[0]);
  main.NimGameScreen = class NimGameScreen extends framework.StatefulWidget {
    createState() {
      return new main._NimGameScreenState.new();
    }
    static ['_#new#tearOff']() {
      return new main.NimGameScreen.new();
    }
  };
  (main.NimGameScreen.new = function() {
    main.NimGameScreen.__proto__.new.call(this);
    ;
  }).prototype = main.NimGameScreen.prototype;
  dart.addTypeTests(main.NimGameScreen);
  dart.addTypeCaches(main.NimGameScreen);
  dart.setMethodSignature(main.NimGameScreen, () => ({
    __proto__: dart.getMethods(main.NimGameScreen.__proto__),
    createState: dart.fnType(main._NimGameScreenState, [])
  }));
  dart.setLibraryUri(main.NimGameScreen, I[0]);
  var _exibirResultado = dart.privateName(main, "_exibirResultado");
  var _jogadaComputador = dart.privateName(main, "_jogadaComputador");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main._NimGameScreenState = class _NimGameScreenState extends framework.State$(main.NimGameScreen) {
    iniciarJogo(quantidade) {
      this.setState(dart.fn(() => {
        this.totalPalitos = quantidade;
        this.palitosRestantes = this.totalPalitos;
      }, T.VoidTovoid()));
    }
    retirarPalitos(quantidade) {
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Confirmar Retirada"), content: new text.Text.new("Você deseja retirar " + dart.str(quantidade) + " palito(s)?"), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pop(T.ObjectN());
              }, T.VoidTovoid()), child: new text.Text.new("Cancelar")}), new text_button.TextButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pop(T.ObjectN());
                this.setState(dart.fn(() => {
                  this.palitosRestantes = this.palitosRestantes - quantidade;
                  if (this.palitosRestantes <= 0) {
                    this[_exibirResultado]("Você perdeu! O computador venceu.");
                    return;
                  }
                  let computadorRetirada = this[_jogadaComputador]();
                  this.palitosRestantes = this.palitosRestantes - computadorRetirada;
                  if (this.palitosRestantes <= 0) {
                    this[_exibirResultado]("Você venceu! O computador perdeu.");
                  } else {
                    scaffold.ScaffoldMessenger.of(context).showSnackBar(new snack_bar.SnackBar.new({content: new text.Text.new("O computador retirou " + dart.str(computadorRetirada) + " palito(s).")}));
                  }
                }, T.VoidTovoid()));
              }, T.VoidTovoid()), child: new text.Text.new("Confirmar")})])}), T.BuildContextToAlertDialog())});
    }
    [_jogadaComputador]() {
      let retirada = (this.palitosRestantes - 1)[$modulo](4);
      if (retirada === 0 || retirada > 3) {
        retirada = math.Random.new().nextInt(3) + 1;
      }
      return retirada;
    }
    [_exibirResultado](mensagem) {
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: new text.Text.new("Resultado"), content: new text.Text.new(mensagem), actions: T.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pop(T.ObjectN());
                this.setState(dart.fn(() => {
                  this.palitosRestantes = 0;
                }, T.VoidTovoid()));
              }, T.VoidTovoid()), child: new text.Text.new("OK")})])}), T.BuildContextToAlertDialog())});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Jogo Nim")}), body: new basic.Padding.new({padding: C[1] || CT.C1, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: (() => {
              let t0 = T.JSArrayOfWidget().of([]);
              if (this.palitosRestantes > 0)
                t0[$addAll](T.JSArrayOfWidget().of([new text.Text.new("Palitos restantes: " + dart.str(this.palitosRestantes), {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 20}), new text.Text.new("Escolha quantos palitos retirar:", {style: new text_style.TextStyle.new({fontSize: 18})}), new basic.SizedBox.new({height: 20}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.ListOfWidget().generate(3, dart.fn(index => new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.blue, onPrimary: colors.Colors.white, padding: new edge_insets.EdgeInsets.symmetric({horizontal: 15, vertical: 8}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), onPressed: dart.fn(() => {
                        let quantidade = index + 1;
                        if (quantidade <= this.palitosRestantes) {
                          this.retirarPalitos(quantidade);
                        }
                      }, T.VoidTovoid()), child: new text.Text.new(dart.str(index + 1) + " palito(s)")}), T.intToElevatedButton()))})]));
              else
                t0[$addAll](T.JSArrayOfWidget().of([new text.Text.new("Escolha a quantidade de palitos para iniciar o jogo:", {style: new text_style.TextStyle.new({fontSize: 24, fontWeight: ui.FontWeight.bold})}), new basic.SizedBox.new({height: 20}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.ListOfWidget().generate(7, dart.fn(index => {
                      let quantidade = index + 7;
                      return new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({primary: colors.Colors.green, onPrimary: colors.Colors.white, padding: new edge_insets.EdgeInsets.symmetric({horizontal: 15, vertical: 8}), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(10)})}), onPressed: dart.fn(() => {
                          this.iniciarJogo(quantidade);
                        }, T.VoidTovoid()), child: new text.Text.new(dart.str(quantidade))});
                    }, T.intToElevatedButton()))})]));
              return t0;
            })()})})});
    }
    static ['_#new#tearOff']() {
      return new main._NimGameScreenState.new();
    }
  };
  (main._NimGameScreenState.new = function() {
    this.totalPalitos = 0;
    this.palitosRestantes = 0;
    main._NimGameScreenState.__proto__.new.call(this);
    ;
  }).prototype = main._NimGameScreenState.prototype;
  dart.addTypeTests(main._NimGameScreenState);
  dart.addTypeCaches(main._NimGameScreenState);
  dart.setMethodSignature(main._NimGameScreenState, () => ({
    __proto__: dart.getMethods(main._NimGameScreenState.__proto__),
    iniciarJogo: dart.fnType(dart.void, [core.int]),
    retirarPalitos: dart.fnType(dart.void, [core.int]),
    [_jogadaComputador]: dart.fnType(core.int, []),
    [_exibirResultado]: dart.fnType(dart.void, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._NimGameScreenState, I[0]);
  dart.setFieldSignature(main._NimGameScreenState, () => ({
    __proto__: dart.getFields(main._NimGameScreenState.__proto__),
    totalPalitos: dart.fieldType(core.int),
    palitosRestantes: dart.fieldType(core.int)
  }));
  main.main = function main$0() {
    binding.runApp(new main.NimGameApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
